periodics:
  - name: periodic-kubernetes-unit-test-s390x
    cron: "0 1/3 * * *"
    labels: 
      preset-ssh-bot: "true"
    extra_refs:
      - base_ref: s390x-deployer
        org: linux-on-ibm-z
        repo: kubetest2-plugins
        workdir: true
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241128-8df65c072f-master
          resources:
            requests:
              cpu: "1500m"
            limits:
              cpu: "1500m"
          command:
            - /bin/bash
          args:
            - -c
            - |
              set -o errexit
              set -o nounset
              set -o pipefail
              set -o xtrace

              export PATH=$GOPATH/bin:$PATH
              export GO111MODULE=on


              make install-deployer-tf

              TF_LATEST="v1.9.8"

              curl -fsSL https://releases.hashicorp.com/terraform/${TF_LATEST:1}/terraform_${TF_LATEST:1}_linux_amd64.zip -o ./terraform.zip
              unzip -o ./terraform.zip  >/dev/null 2>&1
              rm -f ./terraform.zip
              TF="$PWD/terraform"
              export PATH=$PWD:$PATH

              apt-get update && apt-get install -y ansible

              TIMESTAMP=$(date +%s)

              set +o errexit
              kubetest2 tf --vpc-node-image-name ibm-ubuntu-22-04-4-minimal-s390x-3 \
                --vpc-region eu-de --vpc-zone eu-de-1 \
                --vpc-resource-group rZVPCcloudRG \
                --vpc-ssh-key prabhav-loz \
                --vpc-node-profile bz2-4x16 \
                --ssh-private-key /etc/secret-volume/ssh-privatekey \
                --cluster-name config4-$TIMESTAMP \
                --up --set-kubeconfig=false --auto-approve \
                --retry-on-tf-failure 3 \
                --break-kubetest-on-upfail true \
                --playbook k8s-ut-remote.yml
              EXTERNAL_IP=`grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' $(pwd)/config4-$TIMESTAMP/hosts`
              kubetest2 tf --test=exec -- ssh -i /etc/secret-volume/ssh-privatekey root@$EXTERNAL_IP \
                "/make-test.sh"; \
                rc=$?; scp -r -i /etc/secret-volume/ssh-privatekey root@$EXTERNAL_IP:/home/nonroot/artifacts $ARTIFACTS
              kubetest2 tf --vpc-region eu-de --vpc-zone eu-de-1 \
                --ignore-cluster-dir true \
                --cluster-name config4-$TIMESTAMP \
                --down --auto-approve --ignore-destroy-errors
              [ $rc != 0 ] && echo "ERROR: Unit Test suite exited with code:$rc"; exit $rc

  - name: periodic-kubernetes-containerd-e2e-node-tests-s390x
    labels:
      preset-ssh-bot: "true"
      timeout: 2h
    cron: "0 1/1 * * *"
    extra_refs:
      - base_ref: s390x-deployer
        org: linux-on-ibm-z
        repo: kubetest2-plugins
        workdir: true
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241021-d3a4913879-1.31
          resources:
            requests:
              cpu: "1500m"
            limits:
              cpu: "1500m"
          command:
            - /bin/bash
          args:
            - -c
            - |
              set -o errexit
              set -o nounset
              set -o pipefail
              set -o xtrace

              export PATH=$GOPATH/bin:$PATH
              export GO111MODULE=on


              make install-deployer-tf

              TF_LATEST="v1.9.8"

              curl -fsSL https://releases.hashicorp.com/terraform/${TF_LATEST:1}/terraform_${TF_LATEST:1}_linux_amd64.zip -o ./terraform.zip
              unzip -o ./terraform.zip  >/dev/null 2>&1
              rm -f ./terraform.zip
              TF="$PWD/terraform"
              export PATH=$PWD:$PATH

              apt-get update && apt-get install -y ansible

              TIMESTAMP=$(date +%s)
              K8S_BUILD_VERSION=$(curl https://storage.googleapis.com/k8s-release-dev/ci/latest.txt)
              jq --arg key0 'k8s-build-version' --arg value0 $K8S_BUILD_VERSION '. | .[$key0]=$value0' <<<'{}' > $ARTIFACTS/metadata.json

              # kubectl needed for the e2e tests
              curl -sSL https://dl.k8s.io/ci/$K8S_BUILD_VERSION/bin/linux/`go env GOARCH`/kubectl > /usr/local/bin/kubectl
              chmod +x /usr/local/bin/kubectl

              set +o errexit
              kubetest2 tf --vpc-node-image-name ibm-ubuntu-22-04-4-minimal-s390x-3 \
                --vpc-region eu-de --vpc-zone eu-de-1 \
                --vpc-resource-group rZVPCcloudRG \
                --vpc-ssh-key prabhav-loz \
                --ssh-private-key /etc/secret-volume/ssh-privatekey \
                --cluster-name config3-$TIMESTAMP \
                --up --set-kubeconfig=false --auto-approve \
                --build-version $K8S_BUILD_VERSION --retry-on-tf-failure 3 \
                --break-kubetest-on-upfail true \
                --playbook k8s-node-remote.yml
              EXTERNAL_IP=`grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' $(pwd)/config3-$TIMESTAMP/hosts`
              kubetest2 tf --test=exec -- ssh -i /etc/secret-volume/ssh-privatekey root@$EXTERNAL_IP \
                "export SKIP='\[Flaky\]|\[Slow\]|\[Serial\]|Containers.Lifecycle.should|should.execute.readiness.probe.while.in.preStop' && /make-test-e2e-node.sh"; \
                rc=$?; scp -r -i /etc/secret-volume/ssh-privatekey root@$EXTERNAL_IP:/tmp/_artifacts $ARTIFACTS
              kubetest2 tf --vpc-region eu-de --vpc-zone eu-de-1 \
                --ignore-cluster-dir true \
                --cluster-name config3-$TIMESTAMP \
                --down --auto-approve --ignore-destroy-errors
              [ $rc != 0 ] && echo "ERROR: E2ENode Test suite exited with code:$rc"; exit $rc
